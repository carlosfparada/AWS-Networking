---

- name: Query VPCs {{ item.vpc_1 }}
  amazon.aws.ec2_vpc_net_info:
    filters:
      "tag:name": "{{ item.vpc_1 }}"
  register: vpc1

- name: Query VPCs {{ item.vpc_2 }}
  amazon.aws.ec2_vpc_net_info:
    filters:
      "tag:name": "{{ item.vpc_2 }}"
  register: vpc2

- name: Create VPC peering request
  community.aws.ec2_vpc_peer:
    region: "{{ vpcs['vpc1'].ec2_vpc_region }}"
    peer_region: "{{ vpcs['vpc1'].ec2_vpc_region }}"
    vpc_id: "{{ vpc1.vpcs['vpc2'].id }}"
    peer_vpc_id: "{{ vpc2.vpcs['vpc2'].id }}"
    state: present
  register: vpc_peering_request

- name: Ensure VPC peering connection request
  community.aws.ec2_vpc_peering_info:
    peer_connection_ids:
      - "{{ vpc_peering_request.peering_id }}"
    region: "{{ vpcs['vpc1'].ec2_vpc_region }}"
  register: peering_info
  retries: 3
  delay: 5
  until: peering_info.vpc_peering_connections[0].vpc_peering_connection_id is defined

- name: Wait for peering request to be created
  ansible.builtin.pause:
    seconds: 5

- name: Accept VPC peering request
  community.aws.ec2_vpc_peer:
    region: "{{ vpcs['vpc1'].ec2_vpc_region }}"
    peering_id: "{{ vpc_peering_request.peering_id }}"
    state: accept
  register: vpc_peering_accept