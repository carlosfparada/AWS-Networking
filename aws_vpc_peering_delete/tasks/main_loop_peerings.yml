---

- name: Query VPC {{ item.vpc }}
  amazon.aws.ec2_vpc_net_info:
    region: "{{ vpcs[item.vpc].ec2_vpc_region }}"
    filters:
      "tag:Name": "{{ item.vpc }}"
  register: vpc

- name: Query VPC {{ item.peer_vpc }}
  amazon.aws.ec2_vpc_net_info:
    region: "{{ vpcs[item.peer_vpc].ec2_vpc_region }}"
    filters:
      "tag:Name": "{{ item.peer_vpc }}"
  register: peer_vpc

# - name: Find VPC peering connection {{ item.vpc }} -> {{ item.peer_vpc }}  
#   community.aws.ec2_vpc_peering_info:
#     region: "{{ vpcs[item.vpc].ec2_vpc_region }}"
#     filters:
#       requester-vpc-info.vpc-id: "{{ vpc.vpcs[0].id }}"
#       accepter-vpc-info.vpc-id: "{{ peer_vpc.vpcs[0].id }}"
#   when: vpc.vpcs | length > 0 and peer_vpc.vpcs | length > 0
#   register: vpc_peering

# - name: Delete VPC peering connection {{ item.vpc }} -> {{ item.peer_vpc }}
#   community.aws.ec2_vpc_peer:
#     region: "{{ vpcs[item.vpc].ec2_vpc_region }}"
#     peering_id: "{{ vpc_peering.vpc_peering_connections[0].vpc_peering_connection_id }}"
#     state: absent
#   when: vpc_peering.vpc_peering_connections | length > 0

# - name: Wait VPC peering connection to be deleted
#   ansible.builtin.pause:
#     seconds: 5
